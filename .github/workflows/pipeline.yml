name: Java CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven
        run: mvn compile
      - uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: target

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: .m2
          key: build-cache-${{ github.run_id }}
          restore-keys: build-cache-

  test:
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: .m2
          key: build-cache-${{ github.run_id }}
          restore-keys: build-cache-

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run tests
        run: mvn test

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            target/surefire-reports
            target/site/jacoco

  analyze:
    runs-on: self-hosted
    needs: [build, test]
    steps:
      - uses: actions/checkout@v4

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: .m2
          key: build-cache-${{ github.run_id }}
          restore-keys: build-cache-

      - uses: actions/download-artifact@v4.3.0
        with:
          name: build-artifact
          path: ./target

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: SonarQube Analysis
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=ConnectFour \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.java.binaries=target/classes

  package:
    runs-on: self-hosted
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: .m2
          key: build-cache-${{ github.run_id }}
          restore-keys: build-cache-

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Package
        run: mvn package

      - name: Upload WAR file
        uses: actions/upload-artifact@v4
        with:
          name: connectfour-war
          path: target/*.war

  deploy:
    runs-on: self-hosted
    needs: package
    if: github.event_name == 'workflow_dispatch'
    environment:
      name: test
      url: http://localhost:8080/ConnectFour
    steps:
      - name: Stop old container
        run: docker rm -f tomcat || true

      - name: Remove old image
        run: docker image rm -f connect-four || true

      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t connect-four .

      - name: Run Docker container
        run: docker run --rm -d --name tomcat -p 8080:8080 connect-four

  stop-test:
    runs-on: self-hosted
    if: github.event_name == 'workflow_dispatch'
    environment:
      name: test
      action: stop
    steps:
      - name: Stop Tomcat container
        run: docker rm -f tomcat || true

      - name: Remove Docker image
        run: docker image rm -f connect-four || true