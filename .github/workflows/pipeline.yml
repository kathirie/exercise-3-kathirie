name: Java CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-${{ runner.os }}-

      - name: Build with Maven
        run: mvn compile

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compiled-classes
          path: target

  test:
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-${{ runner.os }}-

      - name: Run tests
        run: mvn test

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            target/surefire-reports
            target/site/jacoco

  analyze:
    runs-on: self-hosted
    needs: test
    continue-on-error: true  # = allow_failure in GitLab
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-${{ runner.os }}-

      - name: Compile for SonarQube (ensures .class files)
        run: mvn compile

      - name: Find .class output path (debug)
        run: find . -name "*.class"

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=ConnectFour \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.qualitygate.wait=true

  package:
    runs-on: self-hosted
    needs: analyze
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-${{ runner.os }}-

      - name: Package
        run: mvn package

      - name: Upload WAR file
        uses: actions/upload-artifact@v4
        with:
          name: connectfour-war
          path: target/*.war

  deploy:
    runs-on: self-hosted
    needs: package
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Stop old container
        run: docker rm -f tomcat || true

      - name: Remove old image
        run: docker image rm -f connect-four || true

      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t connect-four .

      - name: Run Docker container
        run: docker run --rm -d --name tomcat -p 8080:8080 connect-four
